// <auto-generated />
using System;
using GEscolar.API.Infra.SqlServer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GEscolarAPI.Infra.SqlServer.Migrations
{
    [DbContext(typeof(EscolarDbContext))]
    [Migration("20230420223559_Initial_create")]
    partial class Initial_create
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GEscolar.Domain.Entity.Aluno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("GEscolar.Domain.Entity.Boletim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IDBOLETIM");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ATIVO");

                    b.Property<DateTime>("DataEntrega")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATAENTREGA");

                    b.Property<Guid>("IdUsuario")
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IDUSUARIO");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuario");

                    b.ToTable("TBLBOLETIM", (string)null);
                });

            modelBuilder.Entity("GEscolar.Domain.Entity.Disciplina", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IDDISCIPLINA");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ATIVO");

                    b.Property<string>("CargaHoraria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CARGAHORARIA");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NOME");

                    b.HasKey("Id");

                    b.ToTable("TBLDISCIPLINA", (string)null);
                });

            modelBuilder.Entity("GEscolar.Domain.Entity.NotasBoletim", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IDNOTASBOLETIM");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ATIVO");

                    b.Property<Guid>("IdBoletim")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IDBOLETIM");

                    b.Property<Guid>("IdTurma")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IDTURMA");

                    b.Property<decimal>("Nota")
                        .HasColumnType("decimal(2,2)")
                        .HasColumnName("NOTA");

                    b.HasKey("Id");

                    b.HasIndex("IdBoletim");

                    b.HasIndex("IdTurma");

                    b.ToTable("TBLNOTASBOLETIM", (string)null);
                });

            modelBuilder.Entity("GEscolar.Domain.Entity.Professor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Professores");
                });

            modelBuilder.Entity("GEscolar.Domain.Entity.Turma", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IDTURMA");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ATIVO");

                    b.Property<Guid>("IdDisciplina")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IDDISCIPLINA");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("IDUSUARIO");

                    b.HasKey("Id");

                    b.HasIndex("IdDisciplina");

                    b.HasIndex("IdUsuario");

                    b.ToTable("TBLTURMA", (string)null);
                });

            modelBuilder.Entity("GEscolar.Domain.Entity.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("GEscolar.Domain.Entity.Boletim", b =>
                {
                    b.HasOne("GEscolar.Domain.Entity.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GEscolar.Domain.Entity.NotasBoletim", b =>
                {
                    b.HasOne("GEscolar.Domain.Entity.Boletim", "Boletim")
                        .WithMany("NotasBoletins")
                        .HasForeignKey("IdBoletim")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GEscolar.Domain.Entity.Turma", "Turma")
                        .WithMany("NotasBoletins")
                        .HasForeignKey("IdTurma")
                        .IsRequired();

                    b.Navigation("Boletim");

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("GEscolar.Domain.Entity.Turma", b =>
                {
                    b.HasOne("GEscolar.Domain.Entity.Disciplina", "Disciplina")
                        .WithMany("Turmas")
                        .HasForeignKey("IdDisciplina")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GEscolar.Domain.Entity.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Disciplina");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GEscolar.Domain.Entity.Boletim", b =>
                {
                    b.Navigation("NotasBoletins");
                });

            modelBuilder.Entity("GEscolar.Domain.Entity.Disciplina", b =>
                {
                    b.Navigation("Turmas");
                });

            modelBuilder.Entity("GEscolar.Domain.Entity.Turma", b =>
                {
                    b.Navigation("NotasBoletins");
                });
#pragma warning restore 612, 618
        }
    }
}
